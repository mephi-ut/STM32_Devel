#define GPIO_PIN_0                 ((uint16_t)0x0001)  /* Pin 0 selected    */
#define GPIO_PIN_1                 ((uint16_t)0x0002)  /* Pin 1 selected    */
#define GPIO_PIN_2                 ((uint16_t)0x0004)  /* Pin 2 selected    */
#define GPIO_PIN_3                 ((uint16_t)0x0008)  /* Pin 3 selected    */
#define GPIO_PIN_4                 ((uint16_t)0x0010)  /* Pin 4 selected    */
#define GPIO_PIN_5                 ((uint16_t)0x0020)  /* Pin 5 selected    */
#define GPIO_PIN_6                 ((uint16_t)0x0040)  /* Pin 6 selected    */
#define GPIO_PIN_7                 ((uint16_t)0x0080)  /* Pin 7 selected    */
#define GPIO_PIN_8                 ((uint16_t)0x0100)  /* Pin 8 selected    */
#define GPIO_PIN_9                 ((uint16_t)0x0200)  /* Pin 9 selected    */
#define GPIO_PIN_10                ((uint16_t)0x0400)  /* Pin 10 selected   */
#define GPIO_PIN_11                ((uint16_t)0x0800)  /* Pin 11 selected   */
#define GPIO_PIN_12                ((uint16_t)0x1000)  /* Pin 12 selected   */
#define GPIO_PIN_13                ((uint16_t)0x2000)  /* Pin 13 selected   */
#define GPIO_PIN_14                ((uint16_t)0x4000)  /* Pin 14 selected   */
#define GPIO_PIN_15                ((uint16_t)0x8000)  /* Pin 15 selected   */


#include <stdint.h>
#include "stm32f103xb.h"

volatile uint32_t adc = 0;

int main (void){
  RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;  //Подключаем АЦП к линии тактирования
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN; 
  RCC->CFGR |= RCC_CFGR_ADCPRE;        //Предделитель на максимум (на 8)
  RCC->CFGR |= RCC_CFGR_ADCPRE_DIV8;

  ADC1->CR2 |= ADC_CR2_CAL;          //Запуск калибровки (это нужно сделать ДО установки ADON)
    while (!(ADC1->CR2 & ADC_CR2_CAL))
    {
    }
//  ADC1->SQR3 |= (ADC_SQR3_SQ1_1 | ADC_SQR3_SQ1_3); //выбираем 10й канал (PC0)
 
//  ADC1->SQR3 |= (ADC_SQR3_SQ2_1); //выбираем 1й канал (PA1)
  ADC1->CR2 |= (ADC_CR2_EXTSEL_0 | ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_2 | ADC_CR2_EXTTRIG);
  ADC1->CR2 |= ADC_CR2_ADON;
  GPIOA->CRL &= ~GPIO_CRL_CNF0;                        //Аналоговый вход (это АЦП, 0й и 1й канал)
  GPIOA->CRL &= ~GPIO_CRL_MODE0;

while (1) {
    GPIOB -> BSRR = GPIO_PIN_2;
    ADC1->CR2 |= ADC_CR2_SWSTART;     //Запуск преобразования
    while (!(ADC1->SR & ADC_SR_EOC))  //Ждем окончания преобразования
    {

    }
    adc = ADC1->DR;                   //Считываем данные
}

  }