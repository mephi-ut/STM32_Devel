////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : count_bidir_4_drc.vf
// /___/   /\     Timestamp : 07/20/2018 04:55:39
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: /srv/Xilinx/14.7/ISE_DS/ISE/bin/lin64/unwrapped/sch2hdl -intstyle ise -family spartan6 -verilog count_bidir_4_drc.vf -w /home/lusius/Devel/STM32_Devel/FPGA/CNC/step_driver_control/count_bidir_4.sch
//Design Name: count_bidir_4
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_count_bidir_4(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 1ns / 1ps

module count_bidir_4(COUNT, 
                     DIR, 
                     RST, 
                     Q0, 
                     Q1, 
                     Q2, 
                     Q3);

    input COUNT;
    input DIR;
    input RST;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_97;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_101;
   wire XLXN_105;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_113;
   wire XLXN_115;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_186;
   wire XLXN_197;
   wire XLXN_216;
   wire XLXN_223;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   
   assign XLXN_223 = 1;
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   AND2  XLXI_1 (.I0(XLXN_65), 
                .I1(COUNT), 
                .O(XLXN_66));
   AND2  XLXI_2 (.I0(COUNT), 
                .I1(DIR), 
                .O(XLXN_67));
   INV  XLXI_3 (.I(DIR), 
               .O(XLXN_65));
   OR2  XLXI_4 (.I0(XLXN_67), 
               .I1(XLXN_66), 
               .O(XLXN_68));
   (* HU_SET = "XLXI_5_1" *) 
   FTC_HXILINX_count_bidir_4  XLXI_5 (.C(XLXN_68), 
                                     .CLR(RST), 
                                     .T(XLXN_223), 
                                     .Q(Q0_DUMMY));
   INV  XLXI_6 (.I(Q0_DUMMY), 
               .O(XLXN_186));
   AND2  XLXI_73 (.I0(XLXN_97), 
                 .I1(Q0_DUMMY), 
                 .O(XLXN_99));
   AND2  XLXI_74 (.I0(XLXN_186), 
                 .I1(DIR), 
                 .O(XLXN_100));
   INV  XLXI_75 (.I(DIR), 
                .O(XLXN_97));
   OR2  XLXI_76 (.I0(XLXN_100), 
                .I1(XLXN_99), 
                .O(XLXN_101));
   (* HU_SET = "XLXI_77_0" *) 
   FTC_HXILINX_count_bidir_4  XLXI_77 (.C(XLXN_101), 
                                      .CLR(RST), 
                                      .T(XLXN_223), 
                                      .Q(Q1_DUMMY));
   INV  XLXI_78 (.I(Q1_DUMMY), 
                .O(XLXN_197));
   AND2  XLXI_79 (.I0(XLXN_105), 
                 .I1(Q1_DUMMY), 
                 .O(XLXN_107));
   AND2  XLXI_80 (.I0(XLXN_197), 
                 .I1(DIR), 
                 .O(XLXN_108));
   INV  XLXI_81 (.I(DIR), 
                .O(XLXN_105));
   OR2  XLXI_82 (.I0(XLXN_108), 
                .I1(XLXN_107), 
                .O(XLXN_109));
   (* HU_SET = "XLXI_83_2" *) 
   FTC_HXILINX_count_bidir_4  XLXI_83 (.C(XLXN_109), 
                                      .CLR(RST), 
                                      .T(XLXN_223), 
                                      .Q(Q2_DUMMY));
   INV  XLXI_84 (.I(Q2_DUMMY), 
                .O(XLXN_216));
   AND2  XLXI_85 (.I0(XLXN_113), 
                 .I1(Q2_DUMMY), 
                 .O(XLXN_115));
   AND2  XLXI_86 (.I0(XLXN_216), 
                 .I1(DIR), 
                 .O(XLXN_116));
   INV  XLXI_87 (.I(DIR), 
                .O(XLXN_113));
   OR2  XLXI_88 (.I0(XLXN_116), 
                .I1(XLXN_115), 
                .O(XLXN_117));
   (* HU_SET = "XLXI_89_3" *) 
   FTC_HXILINX_count_bidir_4  XLXI_89 (.C(XLXN_117), 
                                      .CLR(RST), 
                                      .T(XLXN_223), 
                                      .Q(Q3));
endmodule
